using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Photon.Pun;

namespace PartyInc
{
    namespace LL
    {
        public class Mono_Booster_LL : MonoBehaviourPun, IPunInstantiateMagicCallback
        {
            [SerializeField] private float _speedBoost;
            [SerializeField] private float _duration;

            public void OnPhotonInstantiate(PhotonMessageInfo info)
            {
                if (info.Sender.ActorNumber == PhotonNetwork.LocalPlayer.ActorNumber) return;
                // Initiating booster
                // Get the tube id
                int viewId = 0;
                if (info.Sender.CustomProperties.ContainsKey("TubeViewId"))
                {
                    viewId = (int)info.Sender.CustomProperties["TubeViewId"];
                }
                else
                {
                    Debug.LogError("PartyInc/LL/ERROR: Tube ID didnt arrive.");
                }

                // Find the tube
                foreach(PhotonView pv in FindObjectsOfType<PhotonView>())
                {
                    if(pv.ViewID == viewId)
                    {
                        // Make it parent
                        Transform parent = pv.transform;
                        transform.parent = parent;
                    }
                }

                // Get and set the local position generated by the procedural generator.
                if (info.Sender.CustomProperties.ContainsKey("BoosterPosition"))
                {
                    transform.localPosition = (Vector3)info.Sender.CustomProperties["BoosterPosition"];
                }
            }

            private void OnTriggerEnter(Collider other)
            {
                if(other.gameObject.tag == "Player" && other.gameObject.GetComponent<Mono_Player_Controller_LL>().photonView.IsMine)
                {
                    Rigidbody theirRb = other.gameObject.GetComponent<Rigidbody>();
                    Mono_Player_Controller_LL theirController = other.gameObject.GetComponent<Mono_Player_Controller_LL>();
                    theirRb.velocity = theirRb.velocity + Vector3.right * _speedBoost;
                    theirController.Boosted = true;
                    theirController.ResetBoost(_duration, _speedBoost);
                }
            }
        }
    }
}



